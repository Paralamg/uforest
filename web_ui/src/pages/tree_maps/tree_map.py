import json
import streamlit as st
import rasterio

from .components.map import render_tree_map
from .components.form import render_edit_form
from .utils.geotiff_loader import load_geotiff_bounds_and_url


def show_tree_map():
    # st.set_page_config(layout="wide")
    st.title("üå≥ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –¥–µ—Ä–µ–≤—å–µ–≤")
    st.caption("–ó–∞–≥—Ä—É–∑–∏—Ç–µ GeoTIFF-—Ñ–∞–π–ª –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ—Ä–µ–≤–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫.")

    # –ó–∞–≥—Ä—É–∑–∫–∞ GeoTIFF –∫–∞—Ä—Ç—ã
    tiff_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ GeoTIFF-—Ñ–∞–π–ª", type=["tif", "tiff"])
    tiff_layer = None
    if tiff_file:
        bounds, url = load_geotiff_bounds_and_url(tiff_file)
        if bounds and url:
            st.success("–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ.")
            tiff_layer = {"bounds": bounds, "url": url}
        else:
            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å GeoTIFF. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª.")

    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤
    DATA_FILE = ".data/trees.json"
    try:
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            trees = json.load(f)
    except FileNotFoundError:
        trees = []

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –∏ –≤—ã–±–æ—Ä –¥–µ—Ä–µ–≤–∞
    selected_tree_id = render_tree_map(trees, tiff_layer)

    # –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ—Ä–µ–≤–∞
    if selected_tree_id:
        updated_tree = render_edit_form(trees, selected_tree_id)
        if updated_tree:
            for i, t in enumerate(trees):
                if t["id"] == updated_tree["id"]:
                    trees[i] = updated_tree
            with open(DATA_FILE, "w", encoding="utf-8") as f:
                json.dump(trees, f, ensure_ascii=False, indent=2)
            st.success("–î–∞–Ω–Ω—ã–µ –¥–µ—Ä–µ–≤–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")